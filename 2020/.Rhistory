separate(reps,c("reps","pwd"),": ") %>%
separate(reps,c("reps","letter")," ") %>%
separate(reps,c("min","max"),"-") %>%
str_remove_all(pwd,"")
inputClean<- input %>%
separate(reps,c("reps","pwd"),": ") %>%
separate(reps,c("reps","letter")," ") %>%
separate(reps,c("min","max"),"-") %>%
str_trim()
inputClean<- input %>%
separate(reps,c("reps","pwd"),": ") %>%
separate(reps,c("reps","letter")," ") %>%
separate(reps,c("min","max"),"-") %>%
str_trim(pwd)
inputClean<- input %>%
separate(reps,c("reps","pwd"),": ") %>%
separate(reps,c("reps","letter")," ") %>%
separate(reps,c("min","max"),"-") %>%
str_trim(.$pwd)
inputClean<- input %>%
separate(reps,c("reps","pwd"),": ") %>%
separate(reps,c("reps","letter")," ") %>%
separate(reps,c("min","max"),"-") %>%
str_trim()
inputClean<- input %>%
separate(reps,c("reps","pwd"),": ") %>%
separate(reps,c("reps","letter")," ") %>%
separate(reps,c("min","max"),"-") %>%
rowwise()%>%
str_trim()
inputClean<- input %>%
separate(reps,c("reps","pwd"),": ") %>%
separate(reps,c("reps","letter")," ") %>%
separate(reps,c("min","max"),"-") %>%
mutate(pwd = str_trim(pwd))
#-------------
inputClean %>%
mutate(
count = str_count(pwd,letter)
) %>%
filter(count >= min & count <= max) %>%
nrow()
View(inputClean)
#-------------
inputClean %>%
mutate(
count = str_count(pwd,letter),
min = as.integer(min),
max = as.integer(max)
) %>%
filter(count >= min & count <= max) %>%
nrow()
#----Part II Answer = -------
inputClean %>%
rename(
min = pos1,
max = pos2
)
#----Part II Answer = -------
inputClean %>%
rename(
min = "pos1",
max = "pos2"
)
#----Part II Answer = -------
inputClean %>%
rename(
"pos1"=min,
"pos2"=max
)
test <- 'abcd'
test[1]
substr(test,2,2)
substr(test,2,3)
substr(test,4,3)
#----Part II Answer = -------
inputClean %>%
rename(
"pos1"=min,
"pos2"=max
) %>%
mutate(pos1Match = ifelse(substr(pwd,pos1,pos1)==letter,1,0))
#----Part II Answer = -------
inputClean %>%
rename(
"pos1"=min,
"pos2"=max
) %>%
mutate(pos1Match = ifelse(substr(pwd,pos1,pos1)==letter,1,0),
pos2Match = ifelse(substr(pwd,pos2,pos2)==letter,1,0),
matchStrength = pos1Match + pos2Match
) %>%
filter(matchStrength == 1) %>%
nrow()
read.csv('./Day3/input.csv')
read.csv('./Day3/input.csv',col.names = 'rep1')
input<- read.csv('./Day3/input.csv',col.names = 'rep1')
nrow(input)
input<- read.csv('./Day3/input.csv',col.names = 'rep1')
xrows<-len(input[1])
xrows<-length(input[1])
xrows<-str_length(input[1])
input[1]
input[1,]
xrows<-str_length(input[1,])
xrows<-str_length(input[2,])
xrows<-str_length(input[1,])
yrows<-nrow(input)
3*322
minxRows <- 3*yrows
xreps <-ceiling(minxRows/xrows)
31*32
31*31
rep_len(1:4,10)
input$rep1 <- rep_len(input$rep1,62)
input %>%
mutate(newRow = rep_len(rep1,ceiling(3*nrow(input)/str_length(input[1,]))))
t %>%
mutate(newR
input %>%
mutate(newRow = rep_len(rep1,ceiling(3*nrow(input)/str_length(input[1,]))))
input %>%
rowwise() %>%
mutate(newRow = rep_len(rep1,ceiling(3*nrow(input)/str_length(input[1,]))))
input[1,]
rep_len(input[1,],32)
rep_len(input[1,],33)
rep_len(input[1,],32)
ceiling(3*nrow(input)/str_length(input[1,]))
input
#-----
input<- read.csv('./Day3/input.csv',col.names = 'rep1',stringsAsFactors = F,strip.white = T)
input %>%
mutate(newRow = rep_len(rep1,ceiling(3*nrow(input)/str_length(input[1,]))))
input %>%
mutate(newRow = rep_len(rep1,minxRows))
input %>%
mutate(newRow = rep_len(rep1,3*nrow(input)))
input %>%
mutate(newRow = strrep(rep1,32))
#-----
inputExpanded<-input %>%
mutate(newRow = strrep(rep1,32))
View(inputExpanded)
length(inputExpanded[1,])
length(inputExpanded[1,2])
str_length(inputExpanded[1,2])
3*nrow(input)
#-----
inputExpanded<-input %>%
mutate(newRow = strrep(rep1,ceiling(str_length(input[1,1])/3*nrow(input))))
str_length(inputExpanded[1,2])
ceiling(str_length(input[1,1])/3*nrow(input))
ceiling(str_length(input[1,1])/(3*nrow(input)))
3*nrow(input)
str_length(input[1,1])
str_length(input[1,1])/(3*nrow(input))
inputExpanded<-input %>%
mutate(newRow = strrep(rep1,ceiling((3*nrow(input))/str_length(input[1,1]))))
str_length(inputExpanded[1,2])
require(stringr)
require(dplyr)
#-----
input<- read.csv('./Day3/input.csv',col.names = 'rep1',stringsAsFactors = F,strip.white = T)
#-----
inputExpanded<-input %>%
mutate(newRow = strrep(rep1,ceiling((3*nrow(input))/str_length(input[1,1]))))
str_length(inputExpanded[1,2])
input %>%
mutate(
charPos = row_number()
)
input %>%
mutate(
charPos = 3*(row_number()-1)+1
)
input %>%
mutate(
newString = strrep(rep1,ceiling((3*(row_number()-1)+1)/str_length(input[1,1])))
)
ceiling((3*(row_number()-1)+1)
/str_length(input[1,1]))
input %>%
mutate(
newString = strrep(rep1,ifelse(row_number == 1,1,ceiling((3*(row_number()-1)+1)/str_length(input[1,1]))))
)
input %>%
mutate(
newString = strrep(rep1,ifelse(row_number() == 1,1,ceiling((3*(row_number()-1)+1)/str_length(input[1,1]))))
)
input %>%
mutate(
newString = strrep(rep1,ceiling((3*(row_number()-1)+1)/str_length(input[1,1])))
)
input %>%
mutate(
newString = strrep(rep1,ceiling((3*(row_number()-1)+1)/str_length(input[1,1])))
)
input %>%
mutate(
newString = substr(strrep(rep1,ceiling((3*(row_number()-1)+1)/str_length(input[1,1]))),
(3*(row_number()-1)+1),(3*(row_number()-1)+1))
)
input %>%
mutate(
newString = ifelse(substr(strrep(rep1,ceiling((3*(row_number()-1)+1)/str_length(input[1,1]))),
(3*(row_number()-1)+1),(3*(row_number()-1)+1)) == "#",1,0)
)
input %>%
mutate(
tree = ifelse(substr(strrep(rep1,ceiling((3*(row_number()-1)+1)/str_length(input[1,1]))),
(3*(row_number()-1)+1),(3*(row_number()-1)+1)) == "#",1,0)
) %>%
summarise(sum(tree))
input %>%
mutate(
tree = ifelse(substr(str_replace(strrep(rep1,ceiling((3*(row_number()-1)+1)/str_length(input[1,1]))),
(3*(row_number()-1)+1),(3*(row_number()-1)+1)," ","" )) == "#",1,0)
) %>%
summarise(sum(tree))
input %>%
mutate(
tree = ifelse(substr(str_replace(strrep(rep1,ceiling((3*(row_number()-1)+1)/str_length(input[1,1]))),
(3*(row_number()-1)+1),(3*(row_number()-1)+1))," ","" ) == "#",1,0)
) %>%
summarise(sum(tree))
input %>%
mutate(
strPosToRead = 3*(row_number()-1)+1,
stripeWidth = str_length(input[1,1])
strRepsNeeded = ceiling(strPosToRead/stripeWidth),
tree = ifelse(substr(strrep(rep1,strRepsNeeded),
strPosToRead,strPosToRead) == "#",1,0)
) %>%
summarise(sum(tree))
input %>%
mutate(
strPosToRead = 3*(row_number()-1)+1,
stripeWidth = str_length(input[1,1]),
strRepsNeeded = ceiling(strPosToRead/stripeWidth),
tree = ifelse(substr(strrep(rep1,strRepsNeeded),
strPosToRead,strPosToRead) == "#",1,0)
) %>%
summarise(sum(tree))
input %>%
mutate(
strPosToRead = 3*(row_number()-1)+1,
stripeWidth = str_length(input[1,1]),
strRepsNeeded = ceiling(strPosToRead/stripeWidth),
tree = ifelse(substr(strrep(rep1,strRepsNeeded),
strPosToRead,strPosToRead) == "#",1,0)
)
input %>%
mutate(
strPosToRead = 3*(row_number()-1)+1,
stripeWidth = str_length(input[1,1]),
strRepsNeeded = ceiling(strPosToRead/stripeWidth),
tree = ifelse(substr(strrep(rep1,strRepsNeeded),
strPosToRead,strPosToRead) == "#",1,0)
)
#-----
input<- read.csv('./Day3/input.csv',header = F, col.names = 'rep1',stringsAsFactors = F,strip.white = T)
input %>%
mutate(
strPosToRead = 3*(row_number()-1)+1,
stripeWidth = str_length(input[1,1]),
strRepsNeeded = ceiling(strPosToRead/stripeWidth),
tree = ifelse(substr(strrep(rep1,strRepsNeeded),
strPosToRead,strPosToRead) == "#",1,0)
) %>%
summarise(sum(tree))
input %>%
mutate(
strPosToRead = 3*(row_number()-1)+1,
stripeWidth = str_length(input[1,1]),
strRepsNeeded = ceiling(strPosToRead/stripeWidth),
tree = ifelse(substr(strrep(rep1,strRepsNeeded),
strPosToRead,strPosToRead) == "#",1,0)
) %>%
summarise(sum(tree))
#-----
paths <- data.frame(one = c(1,1))
View(paths)
#-----
paths <- matrix(c(1,1,3,1,5,1,7,1,1,2),ncol = 2)
View(paths)
#-----
paths <- as.data.frame(matrix(c(1,1,3,1,5,1,7,1,1,2),ncol = 2))
paths <- as.data.frame(matrix(c(1,1,3,1,5,1,7,1,1,2),ncol = 2))
sapply(paths, function(x){
print(paste0("x = ",x[1]," | ","y = ",x[2]))
})
paths <- as.data.frame(matrix(c(1,1,3,1,5,1,7,1,1,2),ncol = 2))
sapply(paths, function(x){
print(paste0("x = ",x[1]," | ","y = ",x[2]))
})
mapply(paths, function(x){
print(paste0("x = ",x[1]," | ","y = ",x[2]))
})
mapply(paths, function(x){
print(paste0("x = ",x[1]," | ","y = ",x[2]))
})
print(paste0("x = ",x[,1]," | ","y = ",x[,2]))
sapply(paths, function(x){
print(paste0("x = ",x[,1]," | ","y = ",x[,2]))
})
print(paste0("x = ",x[1]," | ","y = ",x[2]))
paths <- matrix(c(1,1,3,1,5,1,7,1,1,2),ncol = 2)
sapply(paths, function(x){
print(paste0("x = ",x[1]," | ","y = ",x[2]))
})
paths <- matrix(c(1,1,3,1,5,1,7,1,1,2),ncol = 2)
sapply(paths, function(x){
print(paste0("x = ",x[1]," | ","y = ",x[2]))
})
#-----
paths <- as.data.frame(matrix(c(1,1,3,1,5,1,7,1,1,2),ncol = 2))
sapply(paths, function(x){
print(paste0("x = ",x$V1," | ","y = ",x$V2))
})
sapply(paths, function(x){
print(paste0("x = ",x[,"V1"]," | ","y = ",x[,"V2"]))
})
print(paste0("x = ",x["V1"]," | ","y = ",x["V2"]))
#-----
paths <- data.frame(matrix(c(1,1,3,1,5,1,7,1,1,2),ncol = 2))
#-----
paths <- data.frame(matrix(c(1,1,3,1,5,1,7,1,1,2),ncol = 2),col.names = c("right","down"))
matrix(c(1,1,3,1,5,1,7,1,1,2),ncol = 2)
#-----
paths <- data.frame(matrix(c(1,1,3,1,5,1,7,1,1,2),ncol = 2),colnames = c("right","down"))
#-----
paths <- data.frame(matrix(c(1,1,3,1,5,1,7,1,1,2),ncol = 2))
for (i in paths){
input %>%
mutate(
strPosToRead = paths[i,1] * (row_number()-1)+1,
stripeWidth = str_length(input[1,1]),
strRepsNeeded = ceiling(strPosToRead/stripeWidth),
tree = ifelse(substr(strrep(rep1,strRepsNeeded),
strPosToRead,strPosToRead) == "#" & (row_number() + 1) %% paths[i,2] == 0,1,0)
) %>%
summarise(sum(tree))
}
for (i in paths){
right <- paths[i,1]
down <- paths[i,2]
input %>%
mutate(
strPosToRead = right * (row_number()-1)+1,
stripeWidth = str_length(input[1,1]),
strRepsNeeded = ceiling(strPosToRead/stripeWidth),
tree = ifelse(substr(strrep(rep1,strRepsNeeded),
strPosToRead,strPosToRead) == "#" & (row_number() + 1) %% down == 0,1,0)
) %>%
summarise(sum(tree))
}
input %>%
mutate(
strPosToRead = right * (row_number()-1)+1,
stripeWidth = str_length(input[1,1]),
strRepsNeeded = ceiling(strPosToRead/stripeWidth),
tree = ifelse(substr(strrep(rep1,strRepsNeeded),
strPosToRead,strPosToRead) == "#" & ((row_number() + 1) %% down) == 0,1,0)
) %>%
summarise(sum(tree))
for (i in paths){
right <- paths[i,1]
down <- paths[i,2]
input %>%
mutate(
strPosToRead = right * (row_number()-1)+1,
stripeWidth = str_length(input[1,1]),
strRepsNeeded = ceiling(strPosToRead/stripeWidth),
tree = ifelse(substr(strrep(rep1,strRepsNeeded),
strPosToRead,strPosToRead) == "#" & ((row_number() + 1) %% down) == 0,1,0)
) %>%
summarise(sum(tree))
}
print(down)
for (i in paths){
right <- paths[i,1]
down <- paths[i,2]
print(right)
print(down)
# input %>%
#   mutate(
#     strPosToRead = right * (row_number()-1)+1,
#     stripeWidth = str_length(input[1,1]),
#     strRepsNeeded = ceiling(strPosToRead/stripeWidth),
#     tree = ifelse(substr(strrep(rep1,strRepsNeeded),
#                          strPosToRead,strPosToRead) == "#" & ((row_number() + 1) %% down) == 0,1,0)
#   ) %>%
#   summarise(sum(tree))
}
for (i in 1:nrow(paths)){
right <- paths[i,1]
down <- paths[i,2]
print(right)
print(down)
# input %>%
#   mutate(
#     strPosToRead = right * (row_number()-1)+1,
#     stripeWidth = str_length(input[1,1]),
#     strRepsNeeded = ceiling(strPosToRead/stripeWidth),
#     tree = ifelse(substr(strrep(rep1,strRepsNeeded),
#                          strPosToRead,strPosToRead) == "#" & ((row_number() + 1) %% down) == 0,1,0)
#   ) %>%
#   summarise(sum(tree))
}
for (i in 1:nrow(paths)){
right <- paths[i,1]
down <- paths[i,2]
input %>%
mutate(
strPosToRead = right * (row_number()-1)+1,
stripeWidth = str_length(input[1,1]),
strRepsNeeded = ceiling(strPosToRead/stripeWidth),
tree = ifelse(substr(strrep(rep1,strRepsNeeded),
strPosToRead,strPosToRead) == "#" & ((row_number() + 1) %% down) == 0,1,0)
) %>%
summarise(sum(tree))
}
paths[i,"trees"] <- input %>%
mutate(
strPosToRead = right * (row_number()-1)+1,
stripeWidth = str_length(input[1,1]),
strRepsNeeded = ceiling(strPosToRead/stripeWidth),
tree = ifelse(substr(strrep(rep1,strRepsNeeded),
strPosToRead,strPosToRead) == "#" & ((row_number() + 1) %% down) == 0,1,0)
) %>%
summarise(sum(tree))
View(paths)
for (i in 1:nrow(paths)){
right <- paths[i,1]
down <- paths[i,2]
paths[i,"trees"] <- input %>%
mutate(
strPosToRead = right * (row_number()-1)+1,
stripeWidth = str_length(input[1,1]),
strRepsNeeded = ceiling(strPosToRead/stripeWidth),
tree = ifelse(substr(strrep(rep1,strRepsNeeded),
strPosToRead,strPosToRead) == "#" & ((row_number() + 1) %% down) == 0,1,0)
) %>%
summarise(sum(tree))
}
input %>%
mutate(
Path1Pos = 1*(row_number()-1)+1,
Path2Pos = 3*(row_number()-1)+1,
Path3Pos = 5*(row_number()-1)+1
Path4Pos =
Path5Pos =
stripeWidth = str_length(input[1,1]),
strRepsNeeded = ceiling(strPosToRead/stripeWidth),
tree = ifelse(substr(strrep(rep1,strRepsNeeded),
strPosToRead,strPosToRead) == "#",1,0)
) %>%
summarise(sum(tree))
#-----
paths <- data.frame(matrix(c(1,1,3,1,5,1,7,1,1,2),ncol = 2))
for (i in 1:nrow(paths)){
right <- paths[i,1]
down <- paths[i,2]
paths[i,"trees"] <- input %>%
mutate(
strPosToRead = right * (row_number()-1)+1,
stripeWidth = str_length(input[1,1]),
strRepsNeeded = ceiling(strPosToRead/stripeWidth),
tree = ifelse(substr(strrep(rep1,strRepsNeeded),
strPosToRead,strPosToRead) == "#" & ((row_number() + 1) %% down) == 0,1,0)
) %>%
summarise(sum(tree))
}
#-----
paths <- data.frame(matrix(c(1,1,3,1,5,1,7,1,1,2),ncol = 2,byrow = T))
#-----
paths <- data.frame(matrix(c(1,1,3,1,5,1,7,1,1,2),ncol = 2,byrow = F))
for (i in 1:nrow(paths)){
right <- paths[i,1]
down <- paths[i,2]
paths[i,"trees"] <- input %>%
mutate(
strPosToRead = right * (row_number()-1)+1,
stripeWidth = str_length(input[1,1]),
strRepsNeeded = ceiling(strPosToRead/stripeWidth),
tree = ifelse(substr(strrep(rep1,strRepsNeeded),
strPosToRead,strPosToRead) == "#" & ((row_number() + 1) %% down) == 0,1,0)
) %>%
summarise(sum(tree))
}
#-----
paths <- data.frame(matrix(c(1,1,3,1,5,1,7,1,1,2),nrow = 5,byrow = F))
#-----
paths <- data.frame(matrix(c(1,1,3,1,5,1,7,1,1,2),nrow = 5,byrow = T))
colnames(paths) <- c("right","down")
for (i in 1:nrow(paths)){
right <- paths[i,1]
down <- paths[i,2]
paths[i,"trees"] <- input %>%
mutate(
strPosToRead = right * (row_number()-1)+1,
stripeWidth = str_length(input[1,1]),
strRepsNeeded = ceiling(strPosToRead/stripeWidth),
tree = ifelse(substr(strrep(rep1,strRepsNeeded),
strPosToRead,strPosToRead) == "#" & ((row_number() + 1) %% down) == 0,1,0)
) %>%
summarise(sum(tree))
}
sapply(paths$trees, "*")
sapply(paths$trees, *)
prod(paths$trees)
